1. Preparando a toolchain para desenvolvimento em Beaglebone Black:

1.1 A toolchain de cross compiling é instalada no linux pelos comandos:

	sudo apt install gcc-arm-linux-gnueabihf 

	sudo apt install g++-arm-linux-gnueabihf

Sendo a 1a linha para C e a 2a para C++.

1.2 Config da IDE Eclipse para o cross compiling:

	Ao criar um novo projeto C/C++ escolha o template "C Managed Build";

	Definir um nome e escolher do tipo executável, com toolchain "Cross GCC";

	Siga a diante, preencha o nome do autor, prossiga;

	deixe o Debug e Release habilitados, siga;

	Na última janela será indicado o prefixo da toolchain, em "cross compilier prefix" preencha 
	com "arm-linux-gnueabihf-" exatamente dessa forma;
	
	Finalizando, é só compilar e enviar a BBB para executar o código do projeto.

2. Preparando a comunicação da BBB com o linux:

	É necessário instalar o minicom no linux, se ainda não tiver (teste chamando sudo minicom),
	no terminal digite: sudo apt install minicom

	Para configurar a porta de comunicação, digite: sudo minicom -s

	No pequeno menu que aparecer vá em "Serial port setup"

	Agora digite "a" para alterar o nome "Serial Device" para "/dev/ttyUSB0"

	Pressione Esc para voltar ao menu e escolha "Save setup as dfl" 

	Se digitar ls /dev aparecerá uma lista em que ttyUSB0 deve estar contida;

	Se não aparecer, em VM deve haver a necessidade de configurar a VM para identificar
	a porta USB da BBB;

	Se aparecer, ao chamar sudo minicom o terminal deve entrar no target e será necessário
	iniciar a placa (boot);

	Em seguida, fazer login com o usuário "debian" e senha "temppwd".